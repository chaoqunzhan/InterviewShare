
1、html5语义化
	优点
		易于用户阅读，样式丢失的时候能让页面呈现清晰的结构；
		有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重；
		方便其他设备解析，如盲人阅读器根据语义渲染网页；
		有利于开发和维护，语义化更具可读性，代码更好维护，与CSS3关系更和谐；

2、行内标签和块标签是什么？
	块标签：<div>、<p>、<h1>…<h6>、<ol>、<ul>、<li>、<address>、<blockquote>、<form>
	块标签特点：
		1.行属性标签它和其它标签处在同一行内
		2.行属性标签无法设置宽度，高度 行高 距顶部距离 距底部距离
		3.行属性标签的宽度是直接由内部的文字或者图片等内容撑开的
		4.行属性标签内部不能嵌套行属性标签（a链接内不能嵌套其他链接）

	行内标签：<a>、<span>、<i>、<em>、<strong>、<label>、<q>、<var>、<cite>、<code>
	行内标签特点：
		1.每一个快属性标签都是从新的一行开始，而且之后的元素也都会从新的一行开始
		    （因为每一个块属性标签都会直接占据一整行的内容，导致下面的内容也只能从新的一行开始）
		2.块属性标签都是可以设置宽度、高度，行高，距顶部距离，距底部距离
		3.块属性标签的宽度假如不做设置，会直接默认为父元素宽度的100%
		4.块属性标签是可以直接嵌套的
		5.p标签中不能嵌套div标签

3、css3：
	其实平时用的也不少，但不知道是css3的内容，真的冤啊；
	box-shadow/text-shadow/border-radius等等，稍后要恶补一下。

4、div水平垂直居中的实现
	<body>
	<div class="div1">
		<div class="div2"></div>
	</div>
	</body>

	1）知道父子容器宽高；
	.div1{ 
		width:400px;
		height:300px;
		border:3px dotted #789;
	}
	.div2{
		width:200px;
		height:200px;
		background: #789;
		margin: 50px 100px 50px 100px;
	}

	2）知道父容器宽高,不知子容器宽高；
	.div1{ 
		width:400px;
		height:300px;
		border:3px dotted #789;
	}
	.div2{
		background: #789;
		position: relative;
		left:50%;
		top:50%;
		margin: -100px 0 0 -100px;
	}

	3）父子容器宽高都未知：
	.div1{ 
		border:3px dotted #789;
	}
	.div2{
		background: #789;
		position: relative;
	 	left:50%;
		top:50%;
		transform: translate(-50%,-50%);
	}

	4）优秀的flex布局：
	.div1{ 
		width:400px;
		height:300px;
		border:3px dotted #789;
		display: flex;//flex布局
		justify-content: center;//子元素水平居中
		align-items: center;//子元素垂直居中
	}
	.div2{
		width:200px;
		height:200px;
		background: #789;
	}


5、position的几个属性
	见并洗洗

6、https和http的区别

	HTTPS和HTTP的区别主要如下：

　　1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。

　　2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。

　　3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。

　　4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。

	客户端在使用HTTPS方式与Web服务器通信时有以下几个步骤，如图所示。
	
	图

　　（1）客户使用https的URL访问Web服务器，要求与Web服务器建立SSL连接。

　　（2）Web服务器收到客户端请求后，会将网站的证书信息（证书中包含公钥）传送一份给客户端。

　　（3）客户端的浏览器与Web服务器开始协商SSL连接的安全等级，也就是信息加密的等级。

　　（4）客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站。

　　（5）Web服务器利用自己的私钥解密出会话密钥。

　　（6）Web服务器利用会话密钥加密与客户端之间的通信。



7、事件冒泡和事件捕获、事件委托

	栗子：
	<!DOCTYPE html>
	<html>
	    <head>
	        <meta charset="UTF-8">
	        <title></title>
	    </head>
	    <style type="text/css">
	        #box1 { width: 300px; height: 300px; background: blueviolet; }
	        #box2 { width: 200px; height: 200px; background: aquamarine; }
	        #box3 { width: 100px; height: 100px; background: tomato; }
	        div { overflow: hidden; margin: 50px auto; }
	    </style>
	    <body>
	        <div id="box1">
	            <div id="box2">
	                <div id="box3"></div>
	            </div>
	        </div>
	        <script>
	            function sayBox3() {
	                console.log('你点了最里面的box');
	            }
	            function sayBox2() {
	                console.log('你点了最中间的box');
	            }
	            function sayBox1() {
	                console.log('你点了最外面的box');
	            }
	            // 事件监听，第三个参数是布尔值，默认false，false是事件冒泡，true是事件捕获
	            document.getElementById('box3').addEventListener('click', sayBox3, false);
	            document.getElementById('box2').addEventListener('click', sayBox2, false);
	            document.getElementById('box1').addEventListener('click', sayBox1, false);

	        </script>
	    </body>
	</html>

	阻止事件冒泡：
	function() {
    // IE里阻止冒泡
    window.event.cancelBubble = true;
    // IE里获取事件源的id
    var srcID = window.event.srcElement.id;
	}
	function(event) {
	    // 非IE里阻止冒泡
	    event.stopPropagation();
	    // 非IE里获取事件源的id
	    var srcID = event.target.id;
	}

	事件委托或者事件代理优点：
	1）减少内存使用；
	2）减少浏览器的重绘；
	3）方便添加动态元素的绑定；



8、var变量提升
	console.log(a);     //undefined
	var a = 1;
	console.log(a);     //1

9、全局的函数
	console.log(fun1);     //undefined
	console.log(fun2);		// error:fun2 is not defined
	var fun1 = function(){}
	fun2 = function(){}


11、vue响应式原理和实现？
	响应式：Reactivity表示一个状态改变之后，如何动态改变整个系统，在实际项目应用场景中即数据如何动态改变Dom。

	https://blog.csdn.net/tangxiujiang/article/details/79594860
	https://funteas.com/topic/5a809f5847dc830a0e4690c2

12、data{
		五个变量

	}

	用setdata只改变其中一个变量，赋值给data，实际上就改变那个变化的？？？

13、vue中的v-if和v-show:

	相同点：v-if与v-show都可以动态控制dom元素显示隐藏;

	不同点：v-if显示隐藏是将dom元素整个添加或删除，而v-show隐藏则是为该元素添加css--display:none，dom元素还在;

14、项目的问题，transition!!!参考菜鸟教程http://www.runoob.com/css3/css3-transitions.html

15、页面的渲染过程https://www.cnblogs.com/slly/p/6640761.html

16、数组的基本操作，数组的去重；

17、怎么判断变量是什么类型？函数和对象？
	js的变量类型：
	基本类型：String、Number、Boolean、Symbol、Undefined、Null （存在栈里）
	引用类型：Object、Array、Json、Function、Date、RegExp、Error （存在堆里，指针存在栈里）
	判断方法：
		1）typeof()：只能用来判断String、Number、Boolean、Object，其他的都是返回Object;
		2）instanceof：运算符用来判断一个构造函数的prototype属性所指向的对象是否存在另外一个要检测对象的原型链上，简单的来说，instanceof 用于判断一个变量是否某个对象的实例。
			栗子：obj instanceof Object;//true 实例obj在不在Object构造函数中；
			弊端：undefined和null被检测为object,因为js中没有这种全局类型；而且都要采用 var a = new number(1) 定义才有效；
		3）constructor：constructor是原型对象的属性指向构造函数，这种方式解决了instanceof的弊端,可以检测出除了undefined和null的9种类型，但是这种方式仍然有个弊端,就是constructor所指向的的构造函数是可以被修改的；
		4）Object.prototype.toString.call：
			栗子：
			alert(Object.prototype.toString.call(“字符串”) === ‘[object String]’) //true;
			alert(Object.prototype.toString.call(123) === ‘[object Number]’) // true;
			alert(Object.prototype.toString.call([1,2,3]) === ‘[object Array]’) // true;
			alert(Object.prototype.toString.call(new Date()) === ‘[object Date]’) // true;
			alert(Object.prototype.toString.call(function a(){}) === ‘[object Function]’) / true;
			alert(Object.prototype.toString.call({}) === ‘[object Object]’) // true;


18、优化网络，雅虎

19、为什么尽量把js放在最后
